language: php
sudo: false

php:
  - 5.6
  - 7

env:
  - TEST_SUITE=8.4.x
  - TEST_SUITE=8.5.x
  - TEST_SUITE=8.6.x

mysql:
  database: drupal
  username: root
  encoding: utf8

before_install:
  # Remove Xdebug as we don't need it and it causes "PHP Fatal error: Maximum
  # function nesting level of '256' reached."
  # We also don't care if that file exists or not on PHP 7.
  - phpenv config-rm xdebug.ini || true
  - composer self-update
  
  # Get the CodeClimate test reporter.
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build

install:
  - composer install

before_script:
  # Remember the current directory for later use in the Drupal installation.
  - export MODULE_DIR=$(pwd)

  # Navigate out of module directory to prevent blown stack by recursive module
  # lookup.
  - cd ..

  # Create database.
  - mysql -e 'create database drupal;'

  # Download Drupal 8 core. Skip this for the coding standards test.
  - travis_retry git clone --branch $TEST_SUITE --depth 1 https://git.drupal.org/project/drupal.git

  # Remember the Drupal installation path.
  - export DRUPAL_DIR="$(pwd)/drupal"

  # Install Composer dependencies for core. Skip this for the coding standards test.
  - composer install --working-dir="$DRUPAL_DIR"

  # Install og sm sub module dependencies.
  - composer require drupal/og_menu
  - composer require drupal/pathauto

  # Start a web server on port 8888 in the background.
  - nohup php -S localhost:8888 --docroot "$DRUPAL_DIR" > /dev/null 2>&1 &

  # Wait until the web server is responding.
  - until curl -s localhost:8888; do true; done > /dev/null

  # Export web server URL for browser tests.
  - export SIMPLETEST_BASE_URL=http://localhost:8888

  # Export database variable for kernel tests.
  - export SIMPLETEST_DB=mysql://root:@127.0.0.1/maps

script:
  - ln -s "$MODULE_DIR" "$DRUPAL_DIR/modules/og_sm"
  - cd "$DRUPAL_DIR"
  - ./vendor/bin/phpunit -c ./core/phpunit.xml.dist "$MODULE_DIR/tests" --coverage-clover build/logs/clover.xml

after_script:
  - if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT; fi
